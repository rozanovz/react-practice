FUNCTIONAL REQUIREMENTS:

1.The “Search” function can be switched to “simple” and “advanced” modes. In “simple” mode the search goes only through the names of notes, and in “advanced” mode can search through the content of notes and tags.
2.“Search” must support autocomplete (suggestion - React Autocomplete).
3.The order of the notes inside a folder can be changed by using drag-and-drop (suggestion - React DnD).
4.Insightful tooltips should appear when a user hovers over any element of the interface.
+5.Names of notes and folders must be editable inline.
+6.After clicking on a note icon, the details of that note be displayed with full text and tags.


OTHER REQUIREMENTS:

+/-1.The solution must utilize ES6 and have two build types: for production and development respectfully.
2.React Hot Loader or react-transform-webpack-hmr should be used for deployment. It’s more convenient and it will burst your productivity.
+ 3.The solution must use an intelligent routing system in order to save the state of opened directories, search results and note details. It is necessary to handle 404 and 500 statuses (suggestion - React Router).
+ 4.Minimize the usage of `state` in components by adding a Flux implementation to the solution. Provide a description of every action or action creator and the tasks they perform (suggestion - Redux).
